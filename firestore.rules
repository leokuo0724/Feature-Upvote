rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the resource
    function isOwner(authorId) {
      return request.auth != null && request.auth.uid == authorId;
    }

    // Users collection
    match /users/{userId} {
      // Anyone can read user profiles
      allow read: if true;
      // Users can create/update their own profile, but cannot modify isAdmin field unless they are admin
      allow create: if isAuthenticated() && request.auth.uid == userId && 
                       (!('isAdmin' in request.resource.data) || !request.resource.data.isAdmin);
      allow update: if isAuthenticated() && request.auth.uid == userId && 
                       (!request.resource.data.diff(resource.data).affectedKeys().hasAny(['isAdmin']) || isAdmin());
      // Only admins can delete users
      allow delete: if isAdmin();
    }

    // Settings collection
    match /settings/{settingsId} {
      // Anyone can read settings (needed for app customization)
      allow read: if true;
      // Only admins can manage settings
      allow write: if isAdmin();
    }

    // Labels collection
    match /labels/{labelId} {
      // Anyone can read labels (needed for display)
      allow read: if true;
      // Only admins can manage labels
      allow write: if isAdmin();
    }

    // Analytics collection
    match /analytics/{analyticsId} {
      // Only admins can read/write analytics data
      allow read, write: if isAdmin();
    }

    // Feature requests collection
    match /featureRequests/{requestId} {
      // Anyone can read feature requests
      allow read: if true;
      
      // Authenticated users can create feature requests
      allow create: if isAuthenticated();
      
      // Authors and admins can update feature requests
      // OR any authenticated user can update commentsCount field
      // BUT only admins can update labels field
      allow update: if isAuthenticated() && 
                       (isOwner(resource.data.authorId) || 
                        isAdmin() ||
                        (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['commentsCount', 'updatedAt']) &&
                         !request.resource.data.diff(resource.data).affectedKeys().hasAny(['labels']))) &&
                       (!request.resource.data.diff(resource.data).affectedKeys().hasAny(['labels']) || isAdmin());
      
      // Authors and admins can delete feature requests
      allow delete: if isAuthenticated() && 
                       (isOwner(resource.data.authorId) || isAdmin());
    }

    // Comments collection
    match /comments/{commentId} {
      // Anyone can read comments
      allow read: if true;
      
      // Authenticated users can create comments
      allow create: if isAuthenticated();
      
      // Authors and admins can update comments
      allow update: if isAuthenticated() && 
                       (isOwner(resource.data.authorId) || isAdmin());
      
      // Authors and admins can delete comments
      allow delete: if isAuthenticated() && 
                       (isOwner(resource.data.authorId) || isAdmin());
    }
  }
} 